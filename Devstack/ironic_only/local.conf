[[local|localrc]]

# As it is, this config will install a very minimal
# OpenStack development system consisting of following services:
# - Identity (Keystone)
# - Image (Glance)
# - Compute (Nova)
# - Networking (Neutron)
#
# tempest and dstat are also enabled to help with testing

# How to set custom DEST instead of default /opt/stack
#DEST=/home/pshchelo/stack
#DATA_DIR=/home/pshchelo/stack/data
#SERVICE_DIR=/home/pshchelo/stack/status
#SUBUNIT_OUTPUT=/home/pshchelo/stack/devstack.subunit

# Save devstack log to file for later inspection
LOGFILE=/opt/stack/devstacklog.txt


#USE_SYSTEMD=False
#USE_SCREEN=True

###########
# PASSWORDS
###########

ADMIN_PASSWORD=secretadmin
MYSQL_PASSWORD=secretadmin
RABBIT_PASSWORD=secretrabbit
SERVICE_PASSWORD=secretservice


##################
# NETWORK SETTINGS
##################

#MULTI_HOST=True
#HOST_IP=192.168.100.11
# By default, DevStack creates a 10.0.0.0/24 network for instances.
# If this overlaps with the hosts network, you may adjust with the
# following.
NETWORK_GATEWAY=10.1.0.1
FIXED_RANGE=10.1.0.0/24
FIXED_NETWORK_SIZE=256
#FLAT_INTERFACE=eth0
# FLOATING_RANGE=172.24.5.0/24
# PUBLIC_NETWORK_GATEWAY=172.24.5.1
# IPV4_ADDRS_SAFE_TO_USE=10.1.0.0/20

# Floating network settings
# This piece below sets the libvirt-created network where the DevStack
# lives as provider network for floating IPs.
# This enables accessing VMs created inside DevStack from hypervisor
# that runs this DevStack VM.
#PUBLIC_INTERFACE=eth0 # trusty
#PUBLIC_INTERFACE=ens3 # xenial
#FLOATING_RANGE=192.168.100.0/24
#PUBLIC_NETWORK_GATEWAY=192.168.100.1
#Q_FLOATING_ALLOCATION_POOL=start=192.168.100.240,end=192.168.100.249
# Q_USE_PROVIDERNET_FOR_PUBLIC=True
# OVS_PHYSICAL_BRIDGE=br-ex
# PUBLIC_BRIDGE=br-ex
# OVS_BRIDGE_MAPPINGS=public:br-ex

# Some pieces for Ironic's multi-tenancy
## commented due to private network usage
# OVS_PHYSICAL_BRIDGE=brbm
# PHYSICAL_NETWORK=mynetwork
# Q_PLUGIN=ml2
# ENABLE_TENANT_VLANS=True
# Q_ML2_TENANT_NETWORK_TYPE=vlan
# TENANT_VLAN_RANGE=100:150
# Q_USE_PROVIDERNET_FOR_PUBLIC=False

##########
# PACKAGES
##########

# run already-installed devstack in offline mode
#OFFLINE=True
# refresh repos
RECLONE=yes
# always upgrade all Python dependencies
PIP_UPGRADE=True
# Set libraries that will be installed from git and not PyPI,
# others are added in services sections
#LIBS_FROM_GIT=python-openstackclient


##########
# SERVICES
##########

### DISABLE EVERYTHING ###
disable_all_services

### BASIC INFRA ###
enable_service dstat mysql rabbit

### TEMPEST ###
enable_service tempest

### KEYSTONE ###
enable_service key
# disable Keystone V2 completely
#ENABLE_IDENTITY_V2=False

### GLANCE ###
enable_service g-api g-reg
# specify what images to download
#DOWNLOAD_DEFAULT_IMAGES=False
# latest cirros qcow2 image
#IMAGE_URLS="http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img"
#IMAGE_URLS+=",http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-rootfs.img.gz"
# Heat functional tests image (Fedora20 based)
#IMAGE_URLS+=",http://tarballs.openstack.org/heat-test-image/fedora-heat-test-image.qcow2"
# Fedora 21 cloud image (e.g. for AWS LoadBalancer resource in Heat)
#IMAGE_URLS+=",http://download.fedoraproject.org/pub/fedora/linux/releases/21/Cloud/Images/x86_64/Fedora-Cloud-Base-20141203-21.x86_64.qcow2"
# latest Ubuntu Trusty amd64 cloud image
#IMAGE_URLS+=",https://cloud-images.ubuntu.com/releases/trusty/release/ubuntu-14.04-server-cloudimg-amd64-disk1.img"

### NOVA ###
enable_service n-api n-cpu n-cond n-sch n-cauth placement-api placement-client
#enable_service n-novnc
# Does not exist in Pike and newer
#enable_service n-crt
# Use Nova-network - mutually exclusive with Neutron
#enable_service n-net
# Set nova-compute to use ironic virt-driver
VIRT_DRIVER=ironic
# Always use config drive whith Ironic nodes
FORCE_CONFIG_DRIVE=True

### NEUTRON ###
enable_service q-svc q-agt q-dhcp q-l3 q-meta q-metering
#enable_service q-lbaas
### NEUTRON PLUGINS ###
#enable_plugin networking-generic-switch git://git.openstack.org/openstack/networking-generic-switch
#GENERIC_SWITCH_USER_MAX_SESSIONS=2
# Needed for Newton release
#Q_PLUGIN_EXTRA_CONF_PATH=/etc/neutron/plugins/ml2
#Q_PLUGIN_EXTRA_CONF_FILES['generic_switch']=ml2_conf_genericswitch.ini

### CINDER ###
# For All-in-one
#enable_service cinder c-sch c-api c-vol
# For Multi-node - c-vol is on compute
#enable_service cinder c-sch c-api
# How to erase cinder volumes on delete [none, zero, shred]
#CINDER_VOLUME_CLEAR=none
# set the size of the stack volume backing file (in MB, default 10250M)
#VOLUME_BACKING_FILE_SIZE=41000M

### HORIZON ###
#enable_service horizon

### SWIFT ###
enable_service s-proxy s-object s-container s-account
# set swift hash - the hash below is result of
# echo "SWIFT_HASH" | md5sum | awk '{print $1}'
SWIFT_HASH=096d08da4f8d4cce3a724c5f6c18f055
# Enable Swift TempUrls
SWIFT_ENABLE_TEMPURLS=True
SWIFT_TEMPURL_KEY=tempurl

### HEAT ###
#enable_service heat h-eng h-api h-api-cfn h-api-cw
#HEAT_ENABLE_ADOPT_ABANDON=True
#LIBS_FROM_GIT+=,python-heatclient

### CEILOMETER ###
#enable_plugin ceilometer git://git.openstack.org/openstack/ceilometer
# set shorter sample
#CEILOMETER_PIPELINE_INTERVAL=60

### AODH ###
#enable_plugin aodh https://git.openstack.org/openstack/aodh

### IRONIC ###
# Uncomment last part to deploy from Gerrit change (example)
enable_plugin ironic git://git.openstack.org/openstack/ironic #refs/changes/28/467728/6
#LIBS_FROM_GIT+=,ironic-lib,python-ironicclient

IRONIC_USE_MOD_WSGI=True
IRONIC_IS_HARDWARE=False
IRONIC_BAREMETAL_BASIC_OPS=True

IRONIC_DEFAULT_BOOT_OPTION=local

# Create 2 virtual machines to pose as Ironic's baremetal nodes.
IRONIC_VM_COUNT=1
# Hardware properties of virtual BM nodes to be crated.
# For CoreOS-based IPA bootsrtap image required RAM is 1024MB.
# For IPA in general, required disk is > 4GB.
IRONIC_VM_SPECS_RAM=2048
IRONIC_VM_SPECS_DISK=10
# Size of the ephemeral partition in GB. Use 0 for no ephemeral partition.
IRONIC_VM_EPHEMERAL_DISK=0
# Configure available drivers
IRONIC_ENABLED_DRIVERS=fake,agent_ipmitool
IRONIC_DEPLOY_DRIVER=agent_ipmitool
# Set the SSH port to connect for *_ssh and *_libvirt drivers
#IRONIC_VM_SSH_PORT=22
# Type of bootstrap image to build and use.
# Available values are dib, coreos (deprecated), tinyipa (default)
#IRONIC_RAMDISK_TYPE = coreos
# To build your own IPA ramdisk from source, set this to True (default)
IRONIC_BUILD_DEPLOY_RAMDISK=False
# Use iPXE or PXE (default True)
#IRONIC_IPXE_ENABLED=False
# iPXE on nodes downloads deploy images from Swift (default False)
# IRONIC_IPXE_USE_SWIFT=True
# Enable builtin iPXE boot script and config server (default False) NOT MERGED CR369438
# IRONIC_IPXE_SERVER_ENABLED=True

IRONIC_VM_LOG_DIR=/opt/stack/new/ironic-bm-logs
DEFAULT_INSTANCE_TYPE=baremetal
BUILD_TIMEOUT=1200
IRONIC_CALLBACK_TIMEOUT=1200

# Ironic's multi-tenancy
# commented for private network usage
# IRONIC_USE_LINK_LOCAL=True
# IRONIC_ENABLED_NETWORK_INTERFACES=flat,neutron
# IRONIC_NETWORK_INTERFACE=neutron
# IRONIC_PROVISION_NETWORK_NAME=ironic-provision
# IRONIC_PROVISION_SUBNET_PREFIX=10.0.5.0/24
# IRONIC_PROVISION_SUBNET_GATEWAY=10.0.5.1

### IRONIC STAGING DRIVERS ###
# Uncomment last part to deploy from Gerrit change (example)
#enable_plugin ironic-staging-drivers git://git.openstack.org/openstack/ironic-staging-drivers refs/changes/92/424292/9
IRONIC_STAGING_DRIVER=pxe_ipmitool_ansible

### IRONIC-INSPECTOR ###
#enable_plugin ironic-inspector git://git.openstack.org/openstack/ironic-inspector
#IRONIC_INSPECTOR_BUILD_RAMDISK=True
#IRONIC_INSPECTOR_RAMDISK_ELEMENT=ironic-agent

### TROVE ###
#enable_service trove tr-api tr-tmgr tr-cond

### SAHARA ###
#enable_service sahara

############################
# POST CONFIG STAGE SETTINGS
############################

# fix to allow access to instance vnc console when accessing Horizon via tunnel
#[[post-config|$NOVA_CONF]]
#[DEFAULT]
#novncproxy_base_url = http://172.18.200.23:6127/vnc_auto.html

#[[post-config|$HEAT_CONF]]
#[DEFAULT]
# enable Convergence engine
#convergence_engine=true
# decrease number of Heat engine workers, when too much for devstack
#num_engine_workers = 2

### TEMPEST ###

# TEMPEST_PLUGINS+=' /opt/stack/new/ironic'

